plot(x,y,col='blue', pch=20, ylim=c(0,max(y)))
library(outliers)
data <- c(5, 14, 15, 15, 14, 13, 19, 17, 16, 20, 22, 8, 21, 28, 11, 9, 29, 40)
grubbs.test(data)
install.packages("outliers")
library(outliers)
data <- c(5, 14, 15, 15, 14, 13, 19, 17, 16, 20, 22, 8, 21, 28, 11, 9, 29, 40)
grubbs.test(data)
grubbs.test(data, opposite= TRUE )
data <- c(5, 14, 15, 15, 14, 13, 19, 17, 16, 20, 22, 8, 21, 28, 11, 9, 29, 40, 42)
grubbs.test(data, type=20)
x=rnorm(seq(1,500),23,1)
boxplot(x)
summary(x)
lower_bound <- median(x) - 3 * mad(x, constant=1)
lower_bound
upper_bound <- median(x) + 3 * mad(x, constant=1)
upper_bound
outlier_ind <- which(x < lower_bound | x > upper_bound)
outlier_ind
x[14]
outlier_ind
est1 <- dixon.test(x[1:25])
Test1
Test1 <- dixon.test(x[1:25])
Test1
Test1 <- dixon.test(x[1:25])
Test1
# Тест /Диксона для наибольшего значения
test2 <- dixon.test(x[1:25],opposite = TRUE)
test2
test2 <- dixon.test(x[1:25],opposite = TRUE)
test2
#рекомендуется всегда проверять результаты с диограммой что бы проверить все потенц. выбросы
boxplot(x[1:25])
boxplot(x[1:25])
out <- boxplot.stats(x[1:25])$out
boxplot(x[1:25],ylab = "x")
mtext(paste("Outliers: ", paste(out, collapse = ", ")))
p <- ggplot(data = drug.df,aes(x = Center, y = value, fill = Response)) +ylab("%")
library(MASS)
library(DescTools)
View(MASS)
View(DescTools)
# таблица частот попадания варианта в ряд наблюдений
table(Cars93$Type)
#относительные частоты
prop.table(table(Cars93$Type))
table(Cars93$Origin)
prop.table(table(Cars93$Origin))
# таблица сопряженности по двум критериям
tab1=table(Cars93$Type, Cars93$Origin)
tab1
# суммы по столбцам и строкам
rowSums(tab1)
colSums(tab1)
# таблица сопряженности по частотам по двум аргументам
prop.table(table(Cars93$Type, Cars93$Origin))
# таблица сопряженности по частотам по двум аргументам в процентах
prop.table(table(Cars93$Type, Cars93$Origin))*100
# распределение одной группы в другой margin=1 - строки margin=2 - столбцы пр. small in non-usa 2x more often then in usa
(tab2<-prop.table(table(Cars93$Type, Cars93$Origin), margin=2)*100)
colSums(tab2)
# test хи-квадрат является ли переменные строк и столбцов независимым. если меньше 5 ->отвергаем гипотезу
chisq.test(Cars93$Type, Cars93$Origin)
#task
light <- c(12, 40, 45)
dark <- c(87, 34, 75)
very.dark <- c(3, 8, 2)
seashell <- cbind(light, dark, very.dark)
seashell
chisq.test(seashell)
# точный тест фишера
# seashellMatrix <- matrix(light, dark, very.dark, nco)
fisher.test(seashell) #<0.05 - признаки зависимы
fisher.test(Cars93$Type, Cars93$Origin) # меньше 0.05 - признаки зависимы
#GTest(Cars93$Type, Cars93$Origin)
#разбивка на группы по типам (3 аргумент)
table(Cars93$Man.trans.avail, Cars93$Origin, Cars93$Type)
#более удобный вывод
ftable(Cars93$Man.trans.avail, Cars93$Origin, Cars93$Type)
# критерий origin man trans avail отличается от type, учесть возможные различия можно применив тест Кокрана-Мантеля-Хензеля
mantelhaen.test(Cars93$Man.trans.avail, Cars93$Origin, Cars93$Type)
#task
drug <-array(c(11, 10, 25, 27,16, 22, 4, 10,
14, 7, 5, 12,2, 1, 14, 16,
6, 0, 11, 12,1, 0, 10, 10,
1, 1, 4, 8,4, 6, 2, 1),
dim = c(2, 2, 8),dimnames = list(
Group = c("Drug", "Control"),
Response = c("Success", "Failure"),
Center = c("1", "2", "3", "4", "5", "6", "7", "8")))
drug
library(reshape) # для функции melt()
drug.df <- data.frame( melt(drug,id=c("Center", "Group", "Response")))
mantelhaen.test(drug)
library(ggplot2) # графический пакет
p <- ggplot(data = drug.df,aes(x = Center, y = value, fill = Response)) +ylab("%")
p + geom_bar(stat = "identity", position = "fill") + facet_grid(Group~.)
table(InsectSprays$count)
#task
boxplot(InsectSprays$count)
InsectSprays
#task
boxplot(InsectSprays$count, spray)
#task
boxplot(InsectSprays$count, InsectSprays$spray)
barplot(medians, beside = TRUE, col = topo.colors(2),
legend.text = rownames(medians), xlab = "Страховка", ylab="Медиана", main= "Кол-ва посещений")
data=read.csv("//sysprofiles.adm.vvsu.ru/STUDENTRPROFILES$/nikitaborisenko4/Desktop/rlang/NMES1988.csv")
View(data)
str(data)
sum(is.na(data))
which(is.na(data))
data_1=na.omit(data)
shapiro.test(data$visits)
ks.test(data$visits,pnorm)
lillie.test(data$visits)
cvm.test(data$visits)
pearson.test(data$visits)
shapiro.test(data$chronic)
shapiro.test(data$age)
shapiro.test(data$school)
shapiro.test(data$income)
X <- rnorm(n=50, mean=10, sd=3)
par(mfrow=c(2,3))
hist(X, breaks = 20, freq = FALSE, col = "lightblue", xlab = "Переменная X", ylab = "Плотность вероятности", main = "Гистограмма, совмещенная с кривой плотности")
lines(density(X), col = "red", lwd = 2)
hist(data$visits, breaks = 20, freq = FALSE, col = "lightblue", xlab = "Переменная visits", ylab = "Плотность вероятности", main = "Гистограмма, совмещенная с кривой плотности")
lines(density(data$visits), col = "red", lwd = 2)
hist(data$chronic, breaks = 20, freq = FALSE, col = "lightblue", xlab = "Переменная chronic", ylab = "Плотность вероятности", main = "Гистограмма, совмещенная с кривой плотности")
lines(density(data$chronic), col = "red", lwd = 2)
hist(data$school, breaks = 20, freq = FALSE, col = "lightblue", xlab = "Переменная school", ylab = "Плотность вероятности", main = "Гистограмма, совмещенная с кривой плотности")
lines(density(data$school), col = "red", lwd = 2)
hist(data$age, breaks = 20, freq = FALSE, col = "lightblue", xlab = "Переменная age", ylab = "Плотность вероятности", main = "Гистограмма, совмещенная с кривой плотности")
lines(density(data$age), col = "red", lwd = 2)
hist(data$income, breaks = 20, freq = FALSE, col = "lightblue", xlab = "Переменная X", ylab = "Плотность вероятности", main = "Гистограмма, совмещенная с кривой плотности")
lines(density(data$income), col = "red", lwd = 2)
length(data$gender)
length(data$gender[data$gender=="male"])
length(data$gender[data$gender=="female"])
#6
# стандартная ошибка среднего показателя (вероятность отклонения от среднего)
SE= sd(data$visits)/ sqrt (length(data$visits))
SE
#7 минимальное значение квартиля макстиальое значение квартиля мединаа всех данных
summary(data$visits)
#8 медианные значения и квартили
tapply(data$visits, INDEX = data$gender, FUN= summary)
# or
table(data$gender)
table(data$gender, data$married)
#9 диограмма Ящик с усами - диаграмма размаха количества посещений по полу
boxplot(data$visits~data$gender, main="visits")
#10 талица медианных значений аргумента от 2 аргументов (ср.знач посещений 2 полов по состоянию здровья)
tapply(data$visits, INDEX = list(data$gender,data$health), FUN= median)
#11
medians = tapply(data$visits, list(data$gender,data$insurance), median)
#создание столбиковой диограммы(данные,горизонт, кол-во цветов )
barplot(medians, beside = TRUE, col = topo.colors(2),
legend.text = rownames(medians), xlab = "Страховка", ylab="Медиана", main= "Кол-ва посещений")
se = tapply(data$visits, list(data$gender,data$insurance), SE);se
b=barplot(medians, beside = TRUE, col = topo.colors(2),ylim=c(0,10),
legend.text = rownames(medians), xlab = "Страховка", main= "Среднее кол-во посещений")
arrows(b, medians + se, b, medians-se, angle = 90, code = 3, length = 0.05)
#12
variable <- tapply(data$age, INDEX = list(data$married, data$gender), FUN= median)
barplot(variable, beside = TRUE, col = topo.colors(2),
legend.text = rownames(variable), xlab = "Страховка", ylab="Медиана", main= "Медианное значение возраста")
variable <- tapply(data$age, INDEX = list(data$married, data$gender), FUN= median)
barplot(variable, beside = TRUE, col = topo.colors(2),
legend.text = rownames(variable), xlab = "Страховка", ylab="Медиана", main= "Медианное значение возраста")
variable <- tapply(InsectSprays$count, INDEX = InsectSprays$count, FUN= median)
variable <- tapply(InsectSprays$count, INDEX = InsectSprays$count, FUN= median)
boxplot(variable)
#task
boxplot(InsectSprays$count)
#task
boxplot(InsectSprays$count)
#task
InsectSprays
boxplot(InsectSprays$count, InsectSprays$count)
boxplot(count ~ spray, InsectSprays)
boxplot(count ~ spray, InsectSprays)
boxplot(count ~ spray,
xlab = "Инсектициды",
ylab = "Количество выживших насекомых",
main = "Эффективность инсектицидов",
col = "coral", data = InsectSprays)
boxplot(count ~ spray,
xlab = "Инсектициды",
ylab = "Количество выживших насекомых",
main = "Эффективность инсектицидов",
col = "red", data = InsectSprays)
boxplot(count ~ spray,
xlab = "Инсектициды",
ylab = "Количество выживших насекомых",
main = "Эффективность инсектицидов",
col = "violet", data = InsectSprays)
#
boxplot(count ~ spray,
xlab = "Инсектициды",
ylab = "Количество выживших насекомых",
main = "Эффективность",
col = "violet", data = InsectSprays)
lower_bound <- median(InsectSprays) - 3 * mad(InsectSprays, constant=1)
lower_bound
# верхний предел
upper_bound <- median(InsectSprays) + 3 * mad(InsectSprays, constant=1)
upper_bound
outlier_ind <- which(InsectSprays < lower_bound | InsectSprays > upper_bound)
outlier_ind <- which(InsectSprays < lower_bound | InsectSprays > upper_bound)
# нижний предел
lower_bound <- median(InsectSprays$count) - 3 * mad(InsectSprays$count, constant=1)
lower_bound
# верхний предел
upper_bound <- median(InsectSprays$count) + 3 * mad(InsectSprays$count, constant=1)
upper_bound
outlier_ind <- which(InsectSprays$count < lower_bound | InsectSprays$count > upper_bound)
outlier_ind <- which(InsectSprays$count < lower_bound | InsectSprays$count > upper_bound)
boxplot.stats(InsectSprays$count)$out
boxplot.stats(InsectSprays$count)$out
grubbs.test(InsectSprays$count)
grubbs.test(InsectSprays) # 0.719 - >0.05; выбросы есть, 26 - выброс
$count
grubbs.test(InsectSprays$count) # 0.719 - >0.05; выбросы есть, 26 - выброс
grubbs.test(InsectSprays$count, opposite= TRUE )
#task
InsectSprays$count
#медианное значение
median(InsectSprays$count)
grubbs.test(data, type=median(InsectSprays$count))
#медианное значение
median(InsectSprays$count)
insectMedian <- median(InsectSprays$count)
grubbs.test(data, type=insectMedian)
#медианное значение
insectMedian <- median(InsectSprays$count)
insectMedian
insectMedian[1]
plot(InsectSprays$count)
boxplot(count ~ spray,
xlab = "Инсектициды",
ylab = "Количество выживших насекомых",
main = "Эффективность",
col = "violet", data = InsectSprays)
insectMedian[1]
grubbs.test(data, type=7)
outlier_ind <- which(InsectSprays$count < lower_bound | InsectSprays$count > upper_bound)
outlier_ind <- which(InsectSprays$count < lower_bound | InsectSprays$count > upper_bound)
outlier_ind
x=rnorm(seq(1,500),23,1)
boxplot(x)
summary(x)
#нижний пердел
lower_bound <- median(x) - 3 * mad(x, constant=1)
lower_bound
# верхний предел
upper_bound <- median(x) + 3 * mad(x, constant=1)
upper_bound
# все выходящие из этого диапазона данные - потенциальные выбросы
# номера строк наблюдений за потенциальными пределами
outlier_ind <- which(x < lower_bound | x > upper_bound)
outlier_ind # 21 потенциальный выброс
insectMedian[1]
grubbs.test(InsectSprays$count, type=7)
Test1 <- dixon.test(InsectSprays$count[1:8])
Test1
# наибольшего
test2 <- dixon.test(InsectSprays$count[1:8],opposite = TRUE)
test2
#наименьш
Test1 <- dixon.test(InsectSprays$count[1:69])
Test1
# наибольшего
test2 <- dixon.test(InsectSprays$count[1:69],opposite = TRUE)
test2
Test1 <- dixon.test(InsectSprays$count[1:69])
Test1
# наибольшего
test2 <- dixon.test(InsectSprays$count[1:69],opposite = TRUE)
test2
#наименьш
Test1 <- dixon.test(InsectSprays$count[1:8])
Test1
# наибольшего
test2 <- dixon.test(InsectSprays$count[1:8],opposite = TRUE)
test2
#наименьш
Test1 <- dixon.test(InsectSprays$count[1:69])
Test1
# наибольшего
test2 <- dixon.test(InsectSprays$count[1:69],opposite = TRUE)
test2
#наименьш
Test1 <- dixon.test(InsectSprays$count[1:69])
Test1
# наибольшего
test2 <- dixon.test(InsectSprays$count[1:69],opposite = TRUE)
test2
#наименьш
Test1 <- dixon.test(InsectSprays$count[69])
Test1
# наибольшего
test2 <- dixon.test(InsectSprays$count[69],opposite = TRUE)
test2
#наименьш
Test1 <- dixon.test(InsectSprays$count[39:69])
Test1
# наибольшего
test2 <- dixon.test(InsectSprays$count[39:69],opposite = TRUE)
test2
Test1 <- dixon.test(InsectSprays$count[40:69])
Test1
# наибольшего
test2 <- dixon.test(InsectSprays$count[40:69],opposite = TRUE)
test2
boxplot(count ~ spray,
xlab = "Инсектициды",
ylab = "Количество выживших насекомых",
main = "Эффективность",
col = "violet", data = InsectSprays)
grubbs.test(InsectSprays$count, type=7)
grubbs.test(InsectSprays$count, type=20)
lower_bound <- median(InsectSprays$count) - 3 * mad(InsectSprays$count, constant=1)
lower_bound
# верхний предел
upper_bound <- median(InsectSprays$count) + 3 * mad(InsectSprays$count, constant=1)
upper_bound
outlier_ind <- which(InsectSprays$count < lower_bound | InsectSprays$count > upper_bound)
boxplot.stats(InsectSprays$count)$out
outlier_ind <- which(InsectSprays$count < lower_bound | InsectSprays$count > upper_bound)
outlier_ind # 8 69 70 71 потенциальные выбросы (4 шт под индексами ...)
Test1 <- dixon.test(InsectSprays$count[1:69])
Test1
# наибольшего
test2 <- dixon.test(InsectSprays$count[1:69],opposite = TRUE)
InsectSprays$count[8]
cat(InsectSprays$count[8], InsectSprays$count[69])
InsectSprays$count[c(8,69,70,71)]
x <- c(
4.27296076175273, 4.3253044335640, 4.55202839528403,
4.33285651824668, 4.0128340310945, 4.07155452370293,
4.04113475664987, 2.7753693269563, 2.49186430883914,
2.39823431758359, 2.3789955162936, 2.14825292752989,
2.19583315284264, 2.1947104626036, 2.14216783486566,
2.28399128121205, 2.3048696257819, 2.23703873535593,
2.28669486582313, 2.4163169738317, 2.03782758779637,
2.61237703056071, 3.47620332697605)
y <- c(
9.097731,9.512591,9.740439,9.910364,9.865059,9.935519,
9.972640,9.920197,10.367693,10.680861,10.999012,11.246248,
10.532816,11.144033,11.261961,11.400160,11.080695,11.173922,
11.506877,11.105483,10.807685,6.489205,4.882802)
# график
plot(x,y)
# ящик с усами
boxplot(y)
# тут хранятся выбросы
boxplot.stats(y)$out
# индексы точек выбросов в наших векторах
ind <- which(y %in% boxplot.stats(y)$out)
# сохраняем точки выбросов в отдельном dataframe
outler <- data.frame(x=x[ind], y=y[ind])
# проверим те ли точки мы нашли
plot(x,y,col='blue', pch=20, ylim=c(0,max(y)))
points(outler$x, outler$y, col='red',pch=19)
# удаляем выбросы и посмотрим на чистые данные без них
x <- x[-ind]
y <- y[-ind]
boxplot(y)
plot(x,y,col='blue', pch=20, ylim=c(0,max(y)))
# тест Граббса - тест на наличие выбросов, для его применения нужно нормальное распределение и >7 наблюдений (?)
# пример
library(outliers)
data <- c(5, 14, 15, 15, 14, 13, 19, 17, 16, 20, 22, 8, 21, 28, 11, 9, 29, 40)
grubbs.test(data)
# p.value  <0.05 -> отвергаем гипотезу, значит выбросы есть, макс значение выброса - 40
grubbs.test(data, opposite= TRUE ) # проверка минимального значения - выброс или нет. Гипотезу принимаем, 5 это не выброс
#p<0.05, 40,42 -> выброс
#выбросы могут быть ошибками или опечатками - проверяем и удаляем или ставим медианное значение
data <- c(5, 14, 15, 15, 14, 13, 19, 17, 16, 20, 22, 8, 21, 28, 11, 9, 29, 40, 42)
grubbs.test(data, type=20)
#Метод Хемпеля - где мы рассматриваем значения вне интервала как выбросы, формируются из +-3
# mad - медиана абсолютных отклонений
# определяем пределы интервала
x=rnorm(seq(1,500),23,1)
boxplot(x)
summary(x)
#нижний пердел
lower_bound <- median(x) - 3 * mad(x, constant=1)
lower_bound
# верхний предел
upper_bound <- median(x) + 3 * mad(x, constant=1)
upper_bound
# все выходящие из этого диапазона данные - потенциальные выбросы
# номера строк наблюдений за потенциальными пределами
outlier_ind <- which(x < lower_bound | x > upper_bound)
outlier_ind # 21 потенциальный выброс (кол-во)
# предел под индексом 14
x[14]
# тест Диксона определяет является ли критический предел - выбросом, если их несколько - делаем для каждого индивидуально
# наименьшее значение выборки не является выбросом.
Test1 <- dixon.test(x[1:25])
Test1
# Тест Диксона для наибольшего значения
test2 <- dixon.test(x[1:25],opposite = TRUE)
test2
#рекомендуется всегда проверять результаты с диаграммой что бы проверить все потенц. выбросы
boxplot(x[1:25])
boxplot(x[1:25])
out <- boxplot.stats(x[1:25])$out
boxplot(x[1:25],ylab = "x")
mtext(paste("Outliers: ", paste(out, collapse = ", ")))
#task
InsectSprays$count
plot(InsectSprays$count)
# диограма количества по видам
boxplot(count ~ spray,
xlab = "Инсектициды",
ylab = "Количество выживших насекомых",
main = "Эффективность",
col = "violet", data = InsectSprays)
# нижний предел
lower_bound <- median(InsectSprays$count) - 3 * mad(InsectSprays$count, constant=1)
lower_bound
# верхний предел
upper_bound <- median(InsectSprays$count) + 3 * mad(InsectSprays$count, constant=1)
upper_bound
outlier_ind <- which(InsectSprays$count < lower_bound | InsectSprays$count > upper_bound)
boxplot.stats(InsectSprays$count)$out
grubbs.test(InsectSprays$count) # 0.719 - >0.05; выбросы есть, 26 - выброс
grubbs.test(InsectSprays$count, opposite= TRUE ) #1 -> 0 - выброс
#медианное значение
insectMedian <- median(InsectSprays$count)
#error with median
insectMedian[1]
grubbs.test(InsectSprays$count, type=20)
#метод хемпеля
outlier_ind <- which(InsectSprays$count < lower_bound | InsectSprays$count > upper_bound)
outlier_ind # 8 69 70 71 потенциальные выбросы (4 шт под индексами ...)
InsectSprays$count[c(8,69,70,71)]
#посмотреть по категориям
#метод хемпеля
outlier_ind <- which(InsectSprays$count < lower_bound | InsectSprays$count > upper_bound)
outlier_ind # 8 69 70 71 потенциальные выбросы (4 шт под индексами ...)
InsectSprays$count[c(8,69,70,71)]
boxplot(InsectSprays$count~InsectSprays$spray)
#посмотреть по категориям
boxplot(InsectSprays$count)
#посмотреть по категориям
boxplot(InsectSprays$spray)
boxplot(InsectSprays$count~InsectSprays$spray)
InsectSprays[c(8,69,70,71)]
$count
InsectSprays$count[c(8,69,70,71)]
table(InsectSprays$count[c(8,69,70,71)])
InsectSprays$count[c(8,69,70,71)]
hist(X, breaks = 20, freq = FALSE, col = "lightblue", xlab = "Переменная X", ylab = "Плотность вероятности", main = "Гистограмма, совмещенная с кривой плотности")
lines(density(X), col = "red", lwd = 2)
barplot(medians, beside = TRUE, col = topo.colors(2),
legend.text = rownames(medians), xlab = "Страховка", ylab="Медиана", main= "Кол-ва посещений")
InsectSprays$count[c(8,69,70,71)]
table(InsectSprays$spray ~ InsectSprays$count[c(8,69,70,71)]
table(InsectSprays$sprays~InsectSprays$count[c(8,69,70,71)])
table(InsectSprays$spray~InsectSprays$count[c(8,69,70,71)])
table(InsectSprays$count[c(8,69,70,71)])
boxplot(InsectSprays$count~InsectSprays$spray)
table(InsectSprays$count[c(8,69,70,71)])
boxplot(InsectSprays$count~InsectSprays$spray)
boxplot(InsectSprays$count~InsectSprays$spray)
table(InsectSprays$count[c(8,69,70,71)])
boxplot(InsectSprays$count~InsectSprays$spray)
df$out
df <- boxplot(InsectSprays$count~InsectSprays$spray)
df$out
# график
plot(x,y)
x <- c(
4.27296076175273, 4.3253044335640, 4.55202839528403,
4.33285651824668, 4.0128340310945, 4.07155452370293,
4.04113475664987, 2.7753693269563, 2.49186430883914,
2.39823431758359, 2.3789955162936, 2.14825292752989,
2.19583315284264, 2.1947104626036, 2.14216783486566,
2.28399128121205, 2.3048696257819, 2.23703873535593,
2.28669486582313, 2.4163169738317, 2.03782758779637,
2.61237703056071, 3.47620332697605)
y <- c(
9.097731,9.512591,9.740439,9.910364,9.865059,9.935519,
9.972640,9.920197,10.367693,10.680861,10.999012,11.246248,
10.532816,11.144033,11.261961,11.400160,11.080695,11.173922,
11.506877,11.105483,10.807685,6.489205,4.882802)
# график
plot(x,y)
df <- boxplot(InsectSprays$count~InsectSprays$spray)
boxplot(y)
# тут хранятся выбросы
boxplot.stats(y)$out
# индексы точек выбросов в наших векторах
ind <- which(y %in% boxplot.stats(y)$out)
# сохраняем точки выбросов в отдельном dataframe
outler <- data.frame(x=x[ind], y=y[ind])
# проверим те ли точки мы нашли
plot(x,y,col='blue', pch=20, ylim=c(0,max(y)))
points(outler$x, outler$y, col='red',pch=19)
df <- boxplot(InsectSprays$count~InsectSprays$spray)
df$out
boxplot(count ~ spray,
xlab = "Инсектициды",
ylab = "Количество выживших насекомых",
main = "Эффективность",
col = "violet", data = InsectSprays)
